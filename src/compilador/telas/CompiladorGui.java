/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package compilador.telas;

//imports para depois que utilizar o javacc em regras.jj

import compilador.regras.ParseException;
import compilador.regras.prataLang;

import java.awt.FileDialog;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Matheus Louren√ßo
 */
public class CompiladorGui extends javax.swing.JFrame {

    public String filename;
    public String filepath;
    public int linenum = 1;
    public int columnnum = 1;
    //Criando o objeto do prataLang
    prataLang parser;
    Clipboard clipboard = getToolkit().getSystemClipboard();
    
    /**
     * Creates new form CompiladorGui
     */
    public CompiladorGui() {
        initComponents();
        TextLineNumber tln = new TextLineNumber(TextArea);
        jScrollPane1.setRowHeaderView(tln);
        int spaceCount = 4;

        ((PlainDocument) jTextArea1.getDocument()).setDocumentFilter(new ChangeTabToSpacesFilter(spaceCount));
        ((PlainDocument) TextArea.getDocument()).setDocumentFilter(new ChangeTabToSpacesFilter(spaceCount));
        TextArea.addCaretListener(new CaretListener() {
            public void caretUpdate(CaretEvent e) {
                JTextArea editArea = (JTextArea)e.getSource();

                // We create a try catch to catch any exceptions. We will simply ignore such an error for our demonstration.
                try {
                    // First we find the position of the caret. This is the number of where the caret is in relation to the start of the JTextArea
                    // in the upper left corner. We use this position to find offset values (eg what line we are on for the given position as well as
                    // what position that line starts on.
                    int caretpos = editArea.getCaretPosition();
                    linenum = editArea.getLineOfOffset(caretpos);

                    // We subtract the offset of where our line starts from the overall caret position.
                    // So lets say that we are on line 5 and that line starts at caret position 100, if our caret position is currently 106
                    // we know that we must be on column 6 of line 5.
                    columnnum = caretpos - editArea.getLineStartOffset(linenum);

                    // We have to add one here because line numbers start at 0 for getLineOfOffset and we want it to start at 1 for display.
                    linenum += 1;
                }
                catch(Exception ex) { }

            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        ButtonNovo = new javax.swing.JButton();
        ButtonAbrir = new javax.swing.JButton();
        ButtonSalvar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        ButtonCopiar = new javax.swing.JButton();
        ButtonRecortar = new javax.swing.JButton();
        ButtonColar = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        ButtonCompilar = new javax.swing.JButton();
        ButtonExecutar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        LineColumn = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuArquivo = new javax.swing.JMenu();
        MenuItemNovo = new javax.swing.JMenuItem();
        MenuItemAbrir = new javax.swing.JMenuItem();
        MenuItemSalvar = new javax.swing.JMenuItem();
        MenuItemSalvarComo = new javax.swing.JMenuItem();
        MenuItemSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        MenuItemCopiar = new javax.swing.JMenuItem();
        MenuItemColar = new javax.swing.JMenuItem();
        MenuItemRecortar = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        MenuItemCompilar = new javax.swing.JMenuItem();
        MenuItemExecutar = new javax.swing.JMenuItem();

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        jSplitPane.setDividerLocation(250);
        jSplitPane.setDividerSize(3);
        jSplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jSplitPane.setLeftComponent(jScrollPane1);
        jSplitPane.setRightComponent(jScrollPane2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        ButtonNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-add-file-25.png"))); // NOI18N
        ButtonNovo.setBorder(null);
        ButtonNovo.setBorderPainted(false);
        ButtonNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ButtonNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNovoActionPerformed(evt);
            }
        });

        ButtonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-file-explorer-25.png"))); // NOI18N
        ButtonAbrir.setBorder(null);
        ButtonAbrir.setBorderPainted(false);
        ButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAbrirActionPerformed(evt);
            }
        });

        ButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-save-as-25.png"))); // NOI18N
        ButtonSalvar.setBorder(null);
        ButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSalvarActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        ButtonCopiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-copy-25.png"))); // NOI18N
        ButtonCopiar.setBorder(null);
        ButtonCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCopiarActionPerformed(evt);
            }
        });

        ButtonRecortar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-cut-25.png"))); // NOI18N
        ButtonRecortar.setBorder(null);
        ButtonRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRecortarActionPerformed(evt);
            }
        });

        ButtonColar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-paste-25.png"))); // NOI18N
        ButtonColar.setBorder(null);
        ButtonColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonColarActionPerformed(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator3.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        ButtonCompilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-code-25.png"))); // NOI18N
        ButtonCompilar.setBorder(null);
        ButtonCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //Try Catch para depois de usar o javacc no regras.jj
                try {
                    ButtonCompilarActionPerformed(evt);
                } catch (ParseException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        ButtonExecutar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compilador/Images/icons8-play-25.png"))); // NOI18N
        ButtonExecutar.setBorder(null);
        ButtonExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonExecutarActionPerformed(evt);
            }
        });

        TextArea.setBackground(new java.awt.Color(51, 51, 51));
        TextArea.setColumns(20);
        TextArea.setForeground(new java.awt.Color(255, 255, 255));
        TextArea.setRows(5);
        TextArea.setCaretColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(TextArea);

        jTextArea1.setEditable(true);
        jTextArea1.setBackground(new java.awt.Color(51, 51, 51));
        jTextArea1.setColumns(20);
        jTextArea1.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE))
                .addGap(6, 6, 6))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(ButtonNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonAbrir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonCopiar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonRecortar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonColar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonCompilar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ButtonExecutar)
                .addContainerGap(433, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LineColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(ButtonAbrir)
                        .addComponent(ButtonNovo)
                        .addComponent(ButtonSalvar))
                    .addComponent(ButtonCopiar)
                    .addComponent(ButtonRecortar)
                    .addComponent(ButtonColar)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCompilar)
                    .addComponent(ButtonExecutar))
                    .addComponent(jSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addGap(2, 2, 2)
                .addComponent(LineColumn))
        );

        ButtonNovo.setOpaque(false);
        ButtonNovo.setContentAreaFilled(false);
        ButtonAbrir.setOpaque(false);
        ButtonAbrir.setContentAreaFilled(false);
        ButtonSalvar.setOpaque(false);
        ButtonSalvar.setContentAreaFilled(false);
        ButtonCopiar.setOpaque(false);
        ButtonCopiar.setContentAreaFilled(false);
        ButtonRecortar.setOpaque(false);
        ButtonRecortar.setContentAreaFilled(false);
        ButtonColar.setOpaque(false);
        ButtonColar.setContentAreaFilled(false);
        ButtonCompilar.setOpaque(false);
        ButtonCompilar.setContentAreaFilled(false);
        ButtonExecutar.setOpaque(false);
        ButtonExecutar.setContentAreaFilled(false);

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 204));

        MenuArquivo.setBackground(new java.awt.Color(204, 204, 204));
        MenuArquivo.setText("File");

        MenuItemNovo.setText("New");
        MenuItemNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemNovoActionPerformed(evt);
            }
        });
        MenuArquivo.add(MenuItemNovo);

        MenuItemAbrir.setText("Open");
        MenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemAbrirActionPerformed(evt);
            }
        });
        MenuArquivo.add(MenuItemAbrir);

        MenuItemSalvar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemSalvar.setText("Save");
        MenuItemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSalvarActionPerformed(evt);
            }
        });
        MenuArquivo.add(MenuItemSalvar);

        MenuItemSalvarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemSalvarComo.setText("Save As");
        MenuItemSalvarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSalvarComoActionPerformed(evt);
            }
        });
        MenuArquivo.add(MenuItemSalvarComo);

        MenuItemSair.setText("Exit");
        MenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSairActionPerformed(evt);
            }
        });
        MenuArquivo.add(MenuItemSair);

        jMenuBar1.add(MenuArquivo);

        jMenu2.setBackground(new java.awt.Color(204, 204, 204));
        jMenu2.setText("Edit");

        MenuItemCopiar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemCopiar.setText("Copy");
        MenuItemCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemCopiarActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItemCopiar);

        MenuItemColar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemColar.setText("Paste");
        MenuItemColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemColarActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItemColar);

        MenuItemRecortar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MenuItemRecortar.setText("Cut");
        MenuItemRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemRecortarActionPerformed(evt);
            }
        });
        jMenu2.add(MenuItemRecortar);

        jMenuBar1.add(jMenu2);

        jMenu3.setBackground(new java.awt.Color(204, 204, 204));
        jMenu3.setText("Compilation");

        MenuItemCompilar.setText("Compile");
        jMenu3.add(MenuItemCompilar);
        MenuItemCompilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //Try Catch para depois de usar o javacc no regras.jj
                try {
                    MenuItemCompilarActionPerformed(evt);
                } catch (ParseException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        MenuItemExecutar.setText("Execute");
        jMenu3.add(MenuItemExecutar);
        MenuItemExecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemExecutarActionPerformed(evt);
            }
        });

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonExecutarActionPerformed
        // TODO add your handling code here:

        System.out.println("Executed");

    }//GEN-LAST:event_ButtonExecutarActionPerformed

    //Erro em throws ParseException que fica ap√≥s ...evt), irei remover e deixar comentado na linha abaixo
    // throws ParseException
    private void ButtonCompilarActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_ButtonCompilarActionPerformed
        // TODO add your handling code here:


        jTextArea1.setText("");
        if(filepath != null){
            SalvarArquivo(filepath);
        }
        else{
            Salvar_Como();
        }
        //Essa linha faz a integra√ß√£o entre o prataLang e o Gui, at√© utilizar o javacc no regras.jj ficar√° com erro ->
        prataLang.Compile(filepath, parser, CompiladorGui.this);

        tabela.setVisible(true);
        tabela.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }//GEN-LAST:event_ButtonCompilarActionPerformed

    private void ButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSalvarActionPerformed
        // TODO add your handling code here:
        
        if(filepath != null){
            SalvarArquivo(filepath);
        }
        else{
            Salvar_Como();
        }
        
    }//GEN-LAST:event_ButtonSalvarActionPerformed

    private void ButtonNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNovoActionPerformed
        // TODO add your handling code here:
        
        Novo();  
        
    }//GEN-LAST:event_ButtonNovoActionPerformed

    private void ButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAbrirActionPerformed
        // TODO add your handling code here:
        
        Abrir();
        
    }//GEN-LAST:event_ButtonAbrirActionPerformed

    private void ButtonCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCopiarActionPerformed
        // TODO add your handling code here:
        
        String copyText = TextArea.getSelectedText();
        StringSelection copySelection = new StringSelection(copyText);
        clipboard.setContents(copySelection, copySelection);
        
    }//GEN-LAST:event_ButtonCopiarActionPerformed

    private void ButtonRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRecortarActionPerformed
        // TODO add your handling code here:
        
        String cutString = TextArea.getSelectedText();
        StringSelection cutSelection = new StringSelection(cutString);
        clipboard.setContents(cutSelection, cutSelection);
        TextArea.replaceRange("", TextArea.getSelectionStart(), TextArea.getSelectionEnd());
        
    }//GEN-LAST:event_ButtonRecortarActionPerformed

    private void ButtonColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonColarActionPerformed
        // TODO add your handling code here:
        
        try{
            Transferable pasteText = clipboard.getContents(CompiladorGui.this);
            String sel = (String) pasteText.getTransferData(DataFlavor.stringFlavor);
            TextArea.replaceRange(sel, TextArea.getSelectionStart(), TextArea.getSelectionEnd());
        } catch (Exception e){
            System.out.println("Paste Error");
        }
        
    }//GEN-LAST:event_ButtonColarActionPerformed

    private void MenuItemExecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemExecutarActionPerformed
        // TODO add your handling code here:

        System.out.println("Executou");

    }//GEN-LAST:event_MenuItemExecutarActionPerformed

    //Erro em throws ParseException que fica ap√≥s ...evt), irei remover e deixar comentado na linha abaixo
    // throws ParseException
    private void MenuItemCompilarActionPerformed(java.awt.event.ActionEvent evt) throws ParseException {//GEN-FIRST:event_MenuItemCompilarActionPerformed
        // TODO add your handling code here:

        jTextArea1.setText("");
        if(filepath != null){
            SalvarArquivo(filepath);
        }
        else{
            Salvar_Como();
        }
        //Essa linha faz a integra√ß√£o entre o prataLang e o Gui, at√© utilizar o javacc no regras.jj ficar√° com erro ->
        parser.Compile(filepath, parser, CompiladorGui.this);

    }//GEN-LAST:event_MenuItemCompilarActionPerformed

    private void MenuItemNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemNovoActionPerformed
        // TODO add your handling code here:
        
        Novo();
        
    }//GEN-LAST:event_MenuItemNovoActionPerformed

    private void MenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemAbrirActionPerformed
        // TODO add your handling code here:
        
        Abrir();
        
    }//GEN-LAST:event_MenuItemAbrirActionPerformed

    private void MenuItemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSalvarActionPerformed
        // TODO add your handling code here:
        
        SalvarArquivo(filepath);
        
    }//GEN-LAST:event_MenuItemSalvarActionPerformed

    private void MenuItemSalvarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSalvarComoActionPerformed
        // TODO add your handling code here:
        
        Salvar_Como();
        
    }//GEN-LAST:event_MenuItemSalvarComoActionPerformed

    private void MenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSairActionPerformed
        // TODO add your handling code here:
        if (filepath != null){
            SalvarArquivo(filepath);
        }
        else {
            Salvar_Como();
        }
        System.exit(0);
        
    }//GEN-LAST:event_MenuItemSairActionPerformed

    private void MenuItemCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemCopiarActionPerformed
        // TODO add your handling code here:
        
        String copyText = TextArea.getSelectedText();
        StringSelection copySelection = new StringSelection(copyText);
        clipboard.setContents(copySelection, copySelection);
        
    }//GEN-LAST:event_MenuItemCopiarActionPerformed

    private void MenuItemColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemColarActionPerformed
        // TODO add your handling code here:
        
        try{
            Transferable pasteText = clipboard.getContents(CompiladorGui.this);
            String sel = (String) pasteText.getTransferData(DataFlavor.stringFlavor);
            TextArea.replaceRange(sel, TextArea.getSelectionStart(), TextArea.getSelectionEnd());
        } catch (Exception e){
            System.out.println("Paste Error");
        }
        
    }//GEN-LAST:event_MenuItemColarActionPerformed

    private void MenuItemRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemRecortarActionPerformed
        // TODO add your handling code here:
        
        String cutString = TextArea.getSelectedText();
        StringSelection cutSelection = new StringSelection(cutString);
        clipboard.setContents(cutSelection, cutSelection);
        TextArea.replaceRange("", TextArea.getSelectionStart(), TextArea.getSelectionEnd());
        
    }//GEN-LAST:event_MenuItemRecortarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompiladorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompiladorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompiladorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompiladorGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CompiladorGui().setVisible(true);
            }
        });
    }
    
    public void SalvarArquivo(String filepath){
        try{
            FileWriter fileWriter = new FileWriter(filepath);
            fileWriter.write(TextArea.getText());
            fileWriter.close();
        }catch (Exception e) {
            
        }
        jTextArea1.setText("");
    }
    
    public void Salvar_Como(){
        FileDialog fileDialog = new FileDialog(CompiladorGui.this, "Save File", FileDialog.SAVE);
        fileDialog.setVisible(true);
        
        
        
        if(fileDialog.getFile() != null){
            filepath = fileDialog.getDirectory() + fileDialog.getFile();
            filename = fileDialog.getFile();
            setTitle(filename);
        }
        SalvarArquivo(filepath);
        jTextArea1.setText("");
    }
    
    public void Abrir(){
        FileDialog fileDialog = new FileDialog(CompiladorGui.this, "Open File", FileDialog.LOAD);
        fileDialog.setVisible(true);
        
        if(fileDialog.getFile() != null){
            filepath = fileDialog.getDirectory() + fileDialog.getFile();
            filename = fileDialog.getFile();
            setTitle(filename);
        }
        try{
            BufferedReader reader = new BufferedReader(new FileReader(filepath));
            StringBuilder sb = new StringBuilder();
            
            String line = null;
            
            while((line = reader.readLine()) != null){
                sb.append(line + "\n");
                TextArea.setText(sb.toString());
            }
        } catch (IOException e) {
            System.out.println("File Not Found");
        }
        jTextArea1.setText("");
    }
    
    public void Novo(){
        if("".equals(TextArea.getText())){
            TextArea.setText("");
            setTitle(filename);
        }
        else {
            Salvar obj = new Salvar(CompiladorGui.this);
            obj.setBounds(0, 0, 700, 250);
            obj.setResizable(false);
            obj.setVisible(true);
            obj.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
        jTextArea1.setText("");
    }


    private static class ChangeTabToSpacesFilter extends DocumentFilter {
        private int spaceCount;
        private String spaces = "";

        public ChangeTabToSpacesFilter(int spaceCount) {
            this.spaceCount = spaceCount;
            for (int i = 0; i < spaceCount; i++) {
                spaces += " ";
            }
        }

        @Override
        public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
                throws BadLocationException {
            string = string.replace("\t", spaces);
            super.insertString(fb, offset, string, attr);
        }

        @Override
        public void remove(FilterBypass fb, int offset, int length) throws BadLocationException {
            super.remove(fb, offset, length);
        }

        @Override
        public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
                throws BadLocationException {
            text = text.replace("\t", spaces);
            super.replace(fb, offset, length, text, attrs);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAbrir;
    private javax.swing.JButton ButtonColar;
    private javax.swing.JButton ButtonCompilar;
    private javax.swing.JButton ButtonCopiar;
    private javax.swing.JButton ButtonExecutar;
    private javax.swing.JButton ButtonNovo;
    private javax.swing.JButton ButtonRecortar;
    private javax.swing.JButton ButtonSalvar;
    public javax.swing.JLabel LineColumn;
    private javax.swing.JMenu MenuArquivo;
    private javax.swing.JMenuItem MenuItemAbrir;
    private javax.swing.JMenuItem MenuItemColar;
    private javax.swing.JMenuItem MenuItemCompilar;
    private javax.swing.JMenuItem MenuItemCopiar;
    private javax.swing.JMenuItem MenuItemExecutar;
    private javax.swing.JMenuItem MenuItemNovo;
    private javax.swing.JMenuItem MenuItemRecortar;
    private javax.swing.JMenuItem MenuItemSair;
    private javax.swing.JMenuItem MenuItemSalvar;
    private javax.swing.JMenuItem MenuItemSalvarComo;
    public javax.swing.JTextArea TextArea;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    public javax.swing.JTextArea jTextArea1;
    private javax.swing.JSplitPane jSplitPane;
    public Table tabela = new Table();
    // End of variables declaration//GEN-END:variables
}
